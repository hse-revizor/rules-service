// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/rules": {
            "get": {
                "parameters": [
                    {
                        "type": "string",
                        "description": "Rule id input",
                        "name": "ruleId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": " "
                    }
                }
            },
            "put": {
                "description": "In success case returns updated rule model",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Rule"
                ],
                "summary": "Update rule",
                "parameters": [
                    {
                        "description": "Rule input",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RuleUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": " "
                    }
                }
            },
            "post": {
                "description": "In success case returns created rule model",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Rule"
                ],
                "summary": "Create rule",
                "parameters": [
                    {
                        "description": "Rule input",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RuleCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": " "
                    }
                }
            },
            "delete": {
                "description": "In success case returns deleted rule model",
                "tags": [
                    "Rule"
                ],
                "summary": "Delete rule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Rule id input",
                        "name": "ruleId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": " "
                    }
                }
            }
        },
        "/rules/all": {
            "get": {
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Take",
                        "name": "take",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Skip",
                        "name": "skip",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": " "
                    }
                }
            }
        }
    },
    "definitions": {
        "RuleCreate": {
            "type": "object",
            "properties": {
                "filePath": {
                    "type": "string"
                },
                "item": {
                    "type": "string"
                },
                "shouldBe": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            }
        },
        "RuleUpdate": {
            "type": "object",
            "properties": {
                "filePath": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "item": {
                    "type": "string"
                },
                "shouldBe": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Rules Service API",
	Description:      "This is a Swagger documentation.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
